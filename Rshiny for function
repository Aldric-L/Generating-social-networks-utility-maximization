library(viridis)
library(shiny)
library(ggplot2)


Ual <- function(a,G,gamma){
    sum(a*G) -  sum(a^gamma)^2 
}

U <- function(a,G,gamma, delta){
  sum(a*G) - sum(a^gamma/(1-a^gamma)) - sum(a)^delta
}

generate_plot <- function(gamma, delta, g1, g2, al) {
  G <- c(g1,g2)
  a <- seq(0,0.9,0.05)
  grid <- as.data.frame(expand.grid(a,a))
  names(grid)[1:2] <- c("a1","a2")
  grid$U <- NA
  if(al){
    for(i in 1:nrow(grid)){
      grid$U[i] <- Ual(grid[i,c(1,2)],G,gamma)
      }
  }else{
    for(i in 1:nrow(grid)){
      grid$U[i] <- U(grid[i,c(1,2)],G,gamma,delta)
      }
  }
  grid$U[grid$U<0] <- 0
  max_row <- grid[which.max(grid$U), ]
  ggplot(aes(x = a1, y = a2), data = grid) +
    geom_tile(aes(fill = U)) +
    scale_fill_viridis(option = "magma") +
    geom_abline(intercept = 0, slope = 1) +
    geom_point(data = max_row, aes(x = a1, y = a2), color = "red", size = 3) +
    theme_light()
}

ui <- fluidPage(
  titlePanel("Interactive Plot with Shiny"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("gamma", "Choose gamma:", min = 0, max = 5, value = 2, step = 0.1),
      sliderInput("delta", "Choose delta:", min = 1, max = 10, value = 2, step = 0.2),
      checkboxInput("al", "Aldick Shit", value = FALSE),
      sliderInput("g1", "Choose G1:", min = 0, max = 1, value = 1/4, step = 0.05),
      sliderInput("g2", "Choose G2:", min = 0, max = 1, value = 1/4, step = 0.05),
    ),
    mainPanel(
      plotOutput("plot")
    )
  )
)

# Define server logic
server <- function(input, output) {
  output$plot <- renderPlot({
    generate_plot(input$gamma, input$delta, input$g1, input$g2, input$al)
  })
}
 

# Run the app
shinyApp(ui, server)
